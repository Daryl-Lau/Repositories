1、介绍
      jQuery contextMenu是一款优秀的右击菜单插件！
      网址：http://medialize.github.io/jQuery-contextMenu/
2、引入插件
      <script type="text/javascript" src="js/contextMenu/jquery.contextMenu.js"></script>
      <link rel="stylesheet" type="text/css" href="js/contextMenu/jquery.contextMenu.css" />


1、简单的右击菜单
     $.contextMenu({
          selector: '.context-menu-one',
          items: {
               "edit": {name: "编辑", icon: "edit"},
               "cut": {name: "剪切", icon: "cut"},
               "copy": {name: "复制", icon: "copy"},
               "paste": {name: "粘贴", icon: "paste"},
               "delete": {name: "删除", icon: "delete"},
               "sep1": "---------",
               "quit": {name: "取消", icon: "quit"}
           },
          callback: function(key,options) {
               console.log(key);
          }
     });
2、在DOM元素上调用contextMenu方法
     $('ul.test').contextMenu({
          selector: 'li',
          callback: function(key, options) {
               console.log(key);
          },
          items: {
               "edit": {name: "编辑", icon: "edit"},
               "cut": {name: "剪切", icon: "cut"},
               "copy": {name: "复制", icon: "copy"},
               "paste": {name: "粘贴", icon: "paste"},
               "delete": {name: "删除", icon: "delete"},
               "sep1": "---------",
               "quit": {name: "取消", icon: "quit"}
           }
      });
3、动态添加进页面的元素依然会自动的加上右击菜单功能（哪怕是使用第一种方法）
     $('button').click(function(){
          $('ul.test').append('<li>'+(parseInt($('ul.test li:last').html())+1)+'</li>');
     });
4、按需动态菜单
     $.contextMenu({
          selector: '.context-menu-one',
          build: function($trigger, e) {
               return {
                    callback: function(key, options) {
                         console.log(key);
                    },
                    items: {
                         "edit": {name: "编辑", icon: "edit"},
                         "cut": {name: "剪切", icon: "cut"},
                         "copy": {name: "复制", icon: "copy"},
                         "paste": {name: "粘贴", icon: "paste"},
                         "delete": {name: "删除", icon: "delete"},
                         "sep1": "---------",
                         "quit": {name: "取消", icon: "quit"}
                    }
               };
          }
     });
5、为选项添加回调函数
     $.contextMenu({
          selector: '.context-menu-one',
          callback: function(key, options) {
               console.log(key);
          },
          items: {
               "edit": {
                    name: "编辑",
                    icon: "edit",
                    // 只对edit有效的回调函数
                    callback: function(key, options) {
                         //console.log(key);
                    }
               },
               "cut": {name: "剪切", icon: "cut"},
               "copy": {name: "复制", icon: "copy"},
               "paste": {name: "粘贴", icon: "paste"},
               "delete": {name: "删除", icon: "delete"},
               "sep1": "---------",
                "quit": {name: "取消", icon: "quit"}
          }
     });
6、保持菜单可见
     $.contextMenu({
          selector: '.context-menu-one',
          callback: function(key, options) {
               console.log(key);
          },
          items: {
               "edit": {
                    name: "点击之后关闭",
                    icon: "edit",
                    callback: function(){ return true; }
               },
               "cut": {
                    name: "点击之后依然显示",
                    icon: "cut",
                    callback: function(){ return false; }
               }
          }
     });
7、左击触发
     $.contextMenu({
          selector: '.context-menu-one',
          trigger: 'left',
          callback: function(key, options) {
               console.log(key);
          },
          items: {
               "edit": {name: "编辑", icon: "edit"},
               "cut": {name: "剪切", icon: "cut"},
               "copy": {name: "复制", icon: "copy"},
               "paste": {name: "粘贴", icon: "paste"},
               "delete": {name: "删除", icon: "delete"},
               "sep1": "---------",
               "quit": {name: "取消", icon: "quit"}
          }
     });
8、hover触发
     trigger: 'hover'
     delay: 500
9、自动隐藏
     autoHide: true
     设置了hover触发之后一定要加上自动隐藏
10、用户自定义触发菜单
       trigger: 'none'
       $('#activate-menu').on('click', function(e) {
              $('.context-menu-one').contextMenu();
              //或者：$('.context-menu-one').trigger("contextmenu");
              //或者：$('.context-menu-one').contextMenu({x: 100, y: 100});
       });
11、禁用/启用 菜单
       禁用：$('.context-menu-one').contextMenu(false);
       启用：$('.context-menu-one').contextMenu(true);
12、禁用选项
       $.contextMenu({
              selector: '.context-menu-one',
              callback: function(key, options) {
                     var m = "clicked: " + key;
                     console.log(m);
              },
              items: {
                     "edit": {name: "Clickable", icon: "edit", disabled: false},
                     "cut": {name: "Disabled", icon: "cut", disabled: true}
              }
       });
       PS：也可以为disabled设置一个函数，通过函数返回的布尔值来设置是否禁用某选项
13、子菜单
       $.contextMenu({
              selector: '.context-menu-sub',
              callback: function(key, options) {
                     var m = "clicked: " + key;
                     console.log(m);
              },
              items: {
                    "edit": {"name": "Edit", "icon": "edit"},
                    "cut": {"name": "Cut", "icon": "cut"},
                    "sep1": "---------",
                    "quit": {"name": "Quit", "icon": "quit"},
                    "sep2": "---------",
                    "fold1": {
                          "name": "Sub group",
                          "items": {
                                "fold1-key1": {"name": "Foo bar"},
                                "fold2": {
                                      "name": "Sub group 2",
                                      "items": {
                                            "fold2-key1": {"name": "alpha"},
                                            "fold2-key2": {"name": "bravo"},
                                            "fold2-key3": {"name": "charlie"}
                                       }
                                },
                                "fold1-key3": {"name": "delta"}
                          }
                    },
                    "fold1a": {
                          "name": "Other group",
                          "items": {
                                "fold1a-key1": {"name": "echo"},
                                "fold1a-key2": {"name": "foxtrot"},
                                "fold1a-key3": {"name": "golf"}
                          }
                    }
              }
       });
